// file: ElearnigOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package ontologia;

import jade.content.onto.*;
import jade.content.schema.*;

/** file: ElearnigOntology.java
 * @author ontology bean generator
 * @version 2019/08/4, 16:13:27
 */
public class ElearnigOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "elearnig";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new ElearnigOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String RECOMENDACIONDADA_RECOMENDACIONDERESULTADOS="recomendacionDeResultados";
    public static final String RECOMENDACIONDADA="RecomendacionDada";
    public static final String PREGUNTACREADA_PREGUNTA="pregunta";
    public static final String PREGUNTACREADA="PreguntaCreada";
    public static final String EVALUACIONCREADA_EVALUACION="evaluacion";
    public static final String EVALUACIONCREADA="EvaluacionCreada";
    public static final String SIMULACROCREADO_SIMULACRO="simulacro";
    public static final String SIMULACROCREADO="SimulacroCreado";
    public static final String ANALISISSIMULACRO_SIMULACRO="simulacro";
    public static final String ANALISISSIMULACRO="AnalisisSimulacro";
    public static final String UNIDADDECONOCIMIENTOCREADA_UNIDADDECONOCIMIENTO="unidadDeConocimiento";
    public static final String UNIDADDECONOCIMIENTOCREADA="UnidadDeConocimientoCreada";
    public static final String EVALUACIONCALIFICADA_EVALUACION="evaluacion";
    public static final String EVALUACIONCALIFICADA="EvaluacionCalificada";
    public static final String SIMULACROCALIFICADO_SIMULACRO="simulacro";
    public static final String SIMULACROCALIFICADO="SimulacroCalificado";
    public static final String EVALUACION_CALIFICACION="calificacion";
    public static final String EVALUACION_LISTADEPREGUNTAS="listaDePreguntas";
    public static final String EVALUACION_NIVELDIFICULTAD="nivelDificultad";
    public static final String EVALUACION_ANALISIS="analisis";
    public static final String EVALUACION="Evaluacion";
    public static final String PREGUNTA_ENUNCIADO="enunciado";
    public static final String PREGUNTA_OPCION4="opcion4";
    public static final String PREGUNTA_RESPUESTACORRECTA="respuestaCorrecta";
    public static final String PREGUNTA_NIVELDIFICULTAD="nivelDificultad";
    public static final String PREGUNTA_ONTOLOGIAPROYECTO_CLASS0="ontologiaProyecto_Class0";
    public static final String PREGUNTA_OPCION1="opcion1";
    public static final String PREGUNTA_OPCION3="opcion3";
    public static final String PREGUNTA_OPCION2="opcion2";
    public static final String PREGUNTA="Pregunta";
    public static final String RECOMENDACIONDESIMULACRO_RECOMENDACION="recomendacion";
    public static final String RECOMENDACIONDESIMULACRO="RecomendacionDeSimulacro";
    public static final String UNIDADDECONOCIMIENTO_LISTADEPREGUNTAS="listaDePreguntas";
    public static final String UNIDADDECONOCIMIENTO_TEMA="tema";
    public static final String UNIDADDECONOCIMIENTO="UnidadDeConocimiento";
    public static final String SIMULACRO_CALIFICACION="calificacion";
    public static final String SIMULACRO_LISTADEPREGUNTAS="listaDePreguntas";
    public static final String SIMULACRO_NIVELDIFICULTAD="nivelDificultad";
    public static final String SIMULACRO_ANALISIS="analisis";
    public static final String SIMULACRO="Simulacro";

  /**
   * Constructor
  */
  private ElearnigOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema simulacroSchema = new ConceptSchema(SIMULACRO);
    add(simulacroSchema, ontologia.Simulacro.class);
    ConceptSchema unidadDeConocimientoSchema = new ConceptSchema(UNIDADDECONOCIMIENTO);
    add(unidadDeConocimientoSchema, ontologia.UnidadDeConocimiento.class);
    ConceptSchema recomendacionDeSimulacroSchema = new ConceptSchema(RECOMENDACIONDESIMULACRO);
    add(recomendacionDeSimulacroSchema, ontologia.RecomendacionDeSimulacro.class);
    ConceptSchema preguntaSchema = new ConceptSchema(PREGUNTA);
    add(preguntaSchema, ontologia.Pregunta.class);
    ConceptSchema evaluacionSchema = new ConceptSchema(EVALUACION);
    add(evaluacionSchema, ontologia.Evaluacion.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema simulacroCalificadoSchema = new PredicateSchema(SIMULACROCALIFICADO);
    add(simulacroCalificadoSchema, ontologia.SimulacroCalificado.class);
    PredicateSchema evaluacionCalificadaSchema = new PredicateSchema(EVALUACIONCALIFICADA);
    add(evaluacionCalificadaSchema, ontologia.EvaluacionCalificada.class);
    PredicateSchema unidadDeConocimientoCreadaSchema = new PredicateSchema(UNIDADDECONOCIMIENTOCREADA);
    add(unidadDeConocimientoCreadaSchema, ontologia.UnidadDeConocimientoCreada.class);
    PredicateSchema analisisSimulacroSchema = new PredicateSchema(ANALISISSIMULACRO);
    add(analisisSimulacroSchema, ontologia.AnalisisSimulacro.class);
    PredicateSchema simulacroCreadoSchema = new PredicateSchema(SIMULACROCREADO);
    add(simulacroCreadoSchema, ontologia.SimulacroCreado.class);
    PredicateSchema evaluacionCreadaSchema = new PredicateSchema(EVALUACIONCREADA);
    add(evaluacionCreadaSchema, ontologia.EvaluacionCreada.class);
    PredicateSchema preguntaCreadaSchema = new PredicateSchema(PREGUNTACREADA);
    add(preguntaCreadaSchema, ontologia.PreguntaCreada.class);
    PredicateSchema recomendacionDadaSchema = new PredicateSchema(RECOMENDACIONDADA);
    add(recomendacionDadaSchema, ontologia.RecomendacionDada.class);


    // adding fields
    simulacroSchema.add(SIMULACRO_ANALISIS, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    simulacroSchema.add(SIMULACRO_NIVELDIFICULTAD, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    simulacroSchema.add(SIMULACRO_LISTADEPREGUNTAS, preguntaSchema, 0, ObjectSchema.UNLIMITED);
    simulacroSchema.add(SIMULACRO_CALIFICACION, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    unidadDeConocimientoSchema.add(UNIDADDECONOCIMIENTO_TEMA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    unidadDeConocimientoSchema.add(UNIDADDECONOCIMIENTO_LISTADEPREGUNTAS, preguntaSchema, 0, ObjectSchema.UNLIMITED);
    recomendacionDeSimulacroSchema.add(RECOMENDACIONDESIMULACRO_RECOMENDACION, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_OPCION2, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_OPCION3, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_OPCION1, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_ONTOLOGIAPROYECTO_CLASS0, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_NIVELDIFICULTAD, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_RESPUESTACORRECTA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_OPCION4, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    preguntaSchema.add(PREGUNTA_ENUNCIADO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    evaluacionSchema.add(EVALUACION_ANALISIS, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    evaluacionSchema.add(EVALUACION_NIVELDIFICULTAD, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    evaluacionSchema.add(EVALUACION_LISTADEPREGUNTAS, preguntaSchema, 0, ObjectSchema.UNLIMITED);
    evaluacionSchema.add(EVALUACION_CALIFICACION, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.OPTIONAL);
    simulacroCalificadoSchema.add(SIMULACROCALIFICADO_SIMULACRO, simulacroSchema, ObjectSchema.OPTIONAL);
    evaluacionCalificadaSchema.add(EVALUACIONCALIFICADA_EVALUACION, evaluacionSchema, ObjectSchema.OPTIONAL);
    unidadDeConocimientoCreadaSchema.add(UNIDADDECONOCIMIENTOCREADA_UNIDADDECONOCIMIENTO, unidadDeConocimientoSchema, ObjectSchema.OPTIONAL);
    analisisSimulacroSchema.add(ANALISISSIMULACRO_SIMULACRO, simulacroSchema, ObjectSchema.OPTIONAL);
    simulacroCreadoSchema.add(SIMULACROCREADO_SIMULACRO, simulacroSchema, ObjectSchema.OPTIONAL);
    evaluacionCreadaSchema.add(EVALUACIONCREADA_EVALUACION, evaluacionSchema, ObjectSchema.OPTIONAL);
    preguntaCreadaSchema.add(PREGUNTACREADA_PREGUNTA, preguntaSchema, ObjectSchema.OPTIONAL);
    recomendacionDadaSchema.add(RECOMENDACIONDADA_RECOMENDACIONDERESULTADOS, recomendacionDeSimulacroSchema, ObjectSchema.OPTIONAL);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
